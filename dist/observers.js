"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var rxjs_1 = require("rxjs");
var deepEqual = require("deep-equal");
function observeAttribute(o, attr) {
    return o
        .filter(function (v) { return !!v; })
        .map(function (v) { return v.attributes[attr]; })
        .distinctUntilChanged(deepEqual);
}
exports.observeAttribute = observeAttribute;
function observeChild(o, rel, plump) {
    return observeList(o.filter(function (v) { return !!v; }).map(function (v) { return v.relationships[rel]; }), plump);
}
exports.observeChild = observeChild;
function observeList(list, plump) {
    var cache = {};
    return list
        .distinctUntilChanged(deepEqual)
        .map(function (children) {
        return children.map(function (item) {
            if (!cache[item.id]) {
                cache[item.id] = plump.find(item);
            }
            cache[item.id].meta = item.meta;
            return cache[item.id];
        });
    })
        .map(function (refs) {
        return refs.map(function (ref) {
            return {
                model: ref,
                meta: ref.meta,
            };
        });
    })
        .switchMap(function (coms) {
        if (!coms || coms.length === 0) {
            return rxjs_1.Observable.of([]);
        }
        else {
            return rxjs_1.Observable.combineLatest(coms.map(function (ed) {
                return ed.model.asObservable(['attributes']).map(function (v) {
                    return Object.assign(v, { meta: ed.meta });
                });
            }));
        }
    })
        .startWith([])
        .shareReplay(1);
}
exports.observeList = observeList;

//# sourceMappingURL=data:application/json;charset=utf8;base64,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QztTQUNiLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQztBQUNwQixDQUFDO0FBdkNELGtDQXVDQyIsImZpbGUiOiJvYnNlcnZlcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNb2RlbERhdGEsIE1vZGVsUmVmZXJlbmNlIH0gZnJvbSAnLi9kYXRhVHlwZXMnO1xuaW1wb3J0IHsgUGx1bXAgfSBmcm9tICcuL3BsdW1wJztcbmltcG9ydCB7IE9ic2VydmFibGUgfSBmcm9tICdyeGpzJztcbmltcG9ydCAqIGFzIGRlZXBFcXVhbCBmcm9tICdkZWVwLWVxdWFsJztcblxuZXhwb3J0IGZ1bmN0aW9uIG9ic2VydmVBdHRyaWJ1dGU8VD4oXG4gIG86IE9ic2VydmFibGU8TW9kZWxEYXRhPixcbiAgYXR0cjogc3RyaW5nXG4pOiBPYnNlcnZhYmxlPFQ+IHtcbiAgcmV0dXJuIG9cbiAgICAuZmlsdGVyKHYgPT4gISF2KVxuICAgIC5tYXAodiA9PiB2LmF0dHJpYnV0ZXNbYXR0cl0pXG4gICAgLmRpc3RpbmN0VW50aWxDaGFuZ2VkPFQ+KGRlZXBFcXVhbCk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBvYnNlcnZlQ2hpbGQoXG4gIG86IE9ic2VydmFibGU8TW9kZWxEYXRhPixcbiAgcmVsOiBzdHJpbmcsXG4gIHBsdW1wOiBQbHVtcFxuKTogT2JzZXJ2YWJsZTxNb2RlbERhdGFbXT4ge1xuICByZXR1cm4gb2JzZXJ2ZUxpc3Qoby5maWx0ZXIodiA9PiAhIXYpLm1hcCh2ID0+IHYucmVsYXRpb25zaGlwc1tyZWxdKSwgcGx1bXApO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gb2JzZXJ2ZUxpc3QoXG4gIGxpc3Q6IE9ic2VydmFibGU8TW9kZWxSZWZlcmVuY2VbXT4sXG4gIHBsdW1wOiBQbHVtcFxuKTogT2JzZXJ2YWJsZTwoTW9kZWxEYXRhKVtdPiB7XG4gIGNvbnN0IGNhY2hlID0ge307XG4gIHJldHVybiBsaXN0XG4gICAgLmRpc3RpbmN0VW50aWxDaGFuZ2VkKGRlZXBFcXVhbClcbiAgICAubWFwKGNoaWxkcmVuID0+IHtcbiAgICAgIHJldHVybiBjaGlsZHJlbi5tYXAoaXRlbSA9PiB7XG4gICAgICAgIGlmICghY2FjaGVbaXRlbS5pZF0pIHtcbiAgICAgICAgICBjYWNoZVtpdGVtLmlkXSA9IHBsdW1wLmZpbmQoaXRlbSk7XG4gICAgICAgIH1cbiAgICAgICAgY2FjaGVbaXRlbS5pZF0ubWV0YSA9IGl0ZW0ubWV0YTtcbiAgICAgICAgcmV0dXJuIGNhY2hlW2l0ZW0uaWRdO1xuICAgICAgfSk7XG4gICAgfSlcbiAgICAubWFwKHJlZnMgPT4ge1xuICAgICAgcmV0dXJuIHJlZnMubWFwKHJlZiA9PiB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgbW9kZWw6IHJlZixcbiAgICAgICAgICBtZXRhOiByZWYubWV0YSxcbiAgICAgICAgfTtcbiAgICAgIH0pO1xuICAgIH0pXG4gICAgLnN3aXRjaE1hcChjb21zID0+IHtcbiAgICAgIGlmICghY29tcyB8fCBjb21zLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gT2JzZXJ2YWJsZS5vZihbXSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICByZXR1cm4gT2JzZXJ2YWJsZS5jb21iaW5lTGF0ZXN0KFxuICAgICAgICAgIGNvbXMubWFwKGVkID0+XG4gICAgICAgICAgICBlZC5tb2RlbC5hc09ic2VydmFibGUoWydhdHRyaWJ1dGVzJ10pLm1hcCh2ID0+IHtcbiAgICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24odiwgeyBtZXRhOiBlZC5tZXRhIH0pO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICApXG4gICAgICAgICk7XG4gICAgICB9XG4gICAgfSlcbiAgICAuc3RhcnRXaXRoKFtdKVxuICAgIC5zaGFyZVJlcGxheSgxKTtcbn1cbiJdfQ==
